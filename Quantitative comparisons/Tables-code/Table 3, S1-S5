##############L_1##################################################################################################################################################
ACE5=final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]]
ACE11=final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]]
ACE9=final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]]
ACE8=final.out.put_total[[1]][[1]][[1]][[1]][[2]]
ACE10=final.out.put_total[[1]][[1]][[1]][[2]]
ACE22=final.out.put_total[[1]][[1]][[2]]
ACE12=final.out.put_total[[1]][[2]]
ACE18=final.out.put_total[[2]]
table=round(t(cbind(c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4),1],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4),1], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4),1],
              final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4),1],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4),1],final.out.put_total[[1]][[1]][[2]][c(4,4),1],
              final.out.put_total[[1]][[2]][c(4,4),1],final.out.put_total[[2]][c(4,4),1]),
            
            c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2),1],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2),1], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2),1],
              final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2),1],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2),1],final.out.put_total[[1]][[1]][[2]][c(1,2),1],
              final.out.put_total[[1]][[2]][c(1,2),1],final.out.put_total[[2]][c(1,2),1]),
            
            c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+4,1], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+4,1], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+4,1],
              final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+4,1],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+4,1],final.out.put_total[[1]][[1]][[2]][c(4,4)+4,1],
              final.out.put_total[[1]][[2]][c(4,4)+4,1],final.out.put_total[[2]][c(4,4)+4,1]),
            
            c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+4,1],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+4,1], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+4,1],
              final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+4,1],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+4,1],final.out.put_total[[1]][[1]][[2]][c(1,2)+4,1],
              final.out.put_total[[1]][[2]][c(1,2)+4,1],final.out.put_total[[2]][c(1,2)+4,1]),
            
            c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+8,1],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+8,1], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+8,1],
              final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+8,1],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+8,1],final.out.put_total[[1]][[1]][[2]][c(4,4)+8,1],
              final.out.put_total[[1]][[2]][c(4,4)+8,1],final.out.put_total[[2]][c(4,4)+8,1]),
            
            c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+8,1],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+8,1], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+8,1],
              final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+8,1],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+8,1],final.out.put_total[[1]][[1]][[2]][c(1,2)+8,1],
              final.out.put_total[[1]][[2]][c(1,2)+8,1],final.out.put_total[[2]][c(1,2)+8,1]),
            
            c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+12,1],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+12,1], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+12,1],
              final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+12,1],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+12,1],final.out.put_total[[1]][[1]][[2]][c(4,4)+12,1],
              final.out.put_total[[1]][[2]][c(4,4)+12,1],final.out.put_total[[2]][c(4,4)+12,1]),
            
            c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+12,1],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+12,1], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+12,1],
              final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+12,1],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+12,1],final.out.put_total[[1]][[1]][[2]][c(1,2)+12,1],
              final.out.put_total[[1]][[2]][c(1,2)+12,1],final.out.put_total[[2]][c(1,2)+12,1]),
            
            c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+16,1],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+16,1], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+16,1],
              final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+16,1],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+16,1],final.out.put_total[[1]][[1]][[2]][c(4,4)+16,1],
              final.out.put_total[[1]][[2]][c(4,4)+16,1],final.out.put_total[[2]][c(4,4)+16,1]),
            
            c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+16,1],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+16,1], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+16,1],
              final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+16,1],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+16,1],final.out.put_total[[1]][[1]][[2]][c(1,2)+16,1],
              final.out.put_total[[1]][[2]][c(1,2)+16,1],final.out.put_total[[2]][c(1,2)+16,1]),
            
            c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+20,1], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+20,1], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+20,1],
              final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+20,1],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+20,1],final.out.put_total[[1]][[1]][[2]][c(4,4)+20,1],
              final.out.put_total[[1]][[2]][c(4,4)+20,1],final.out.put_total[[2]][c(4,4)+20,1]),
            
            c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+20,1],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+20,1], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+20,1],
              final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+20,1],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+20,1],final.out.put_total[[1]][[1]][[2]][c(1,2)+20,1],
              final.out.put_total[[1]][[2]][c(1,2)+20,1],final.out.put_total[[2]][c(1,2)+20,1])
            
            
)
) 
,3)

##############L_2##################################################################################################################################################
table=round(t(cbind(c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4),2],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4),2], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4),2],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4),2],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4),2],final.out.put_total[[1]][[1]][[2]][c(4,4),2],
                      final.out.put_total[[1]][[2]][c(4,4),2],final.out.put_total[[2]][c(4,4),2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2),2],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2),2], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2),2],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2),2],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2),2],final.out.put_total[[1]][[1]][[2]][c(1,2),2],
                      final.out.put_total[[1]][[2]][c(1,2),2],final.out.put_total[[2]][c(1,2),2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+4,2], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+4,2], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+4,2],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+4,2],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+4,2],final.out.put_total[[1]][[1]][[2]][c(4,4)+4,2],
                      final.out.put_total[[1]][[2]][c(4,4)+4,2],final.out.put_total[[2]][c(4,4)+4,2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+4,2],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+4,2], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+4,2],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+4,2],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+4,2],final.out.put_total[[1]][[1]][[2]][c(1,2)+4,2],
                      final.out.put_total[[1]][[2]][c(1,2)+4,2],final.out.put_total[[2]][c(1,2)+4,2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+8,2],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+8,2], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+8,2],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+8,2],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+8,2],final.out.put_total[[1]][[1]][[2]][c(4,4)+8,2],
                      final.out.put_total[[1]][[2]][c(4,4)+8,2],final.out.put_total[[2]][c(4,4)+8,2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+8,2],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+8,2], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+8,2],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+8,2],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+8,2],final.out.put_total[[1]][[1]][[2]][c(1,2)+8,2],
                      final.out.put_total[[1]][[2]][c(1,2)+8,2],final.out.put_total[[2]][c(1,2)+8,2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+12,2],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+12,2], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+12,2],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+12,2],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+12,2],final.out.put_total[[1]][[1]][[2]][c(4,4)+12,2],
                      final.out.put_total[[1]][[2]][c(4,4)+12,2],final.out.put_total[[2]][c(4,4)+12,2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+12,2],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+12,2], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+12,2],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+12,2],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+12,2],final.out.put_total[[1]][[1]][[2]][c(1,2)+12,2],
                      final.out.put_total[[1]][[2]][c(1,2)+12,2],final.out.put_total[[2]][c(1,2)+12,2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+16,2],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+16,2], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+16,2],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+16,2],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+16,2],final.out.put_total[[1]][[1]][[2]][c(4,4)+16,2],
                      final.out.put_total[[1]][[2]][c(4,4)+16,2],final.out.put_total[[2]][c(4,4)+16,2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+16,2],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+16,2], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+16,2],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+16,2],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+16,2],final.out.put_total[[1]][[1]][[2]][c(1,2)+16,2],
                      final.out.put_total[[1]][[2]][c(1,2)+16,2],final.out.put_total[[2]][c(1,2)+16,2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+20,2], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+20,2], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+20,2],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+20,2],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+20,2],final.out.put_total[[1]][[1]][[2]][c(4,4)+20,2],
                      final.out.put_total[[1]][[2]][c(4,4)+20,2],final.out.put_total[[2]][c(4,4)+20,2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+20,2],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+20,2], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+20,2],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+20,2],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+20,2],final.out.put_total[[1]][[1]][[2]][c(1,2)+20,2],
                      final.out.put_total[[1]][[2]][c(1,2)+20,2],final.out.put_total[[2]][c(1,2)+20,2])
                    
                    
)
) 
,3)




##############rho^2##################################################################################################################################################
table=round(t(cbind(c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4),3],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4),3], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4),3],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4),3],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4),3],final.out.put_total[[1]][[1]][[2]][c(4,4),3],
                      final.out.put_total[[1]][[2]][c(4,4),3],final.out.put_total[[2]][c(4,4),3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2),3],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2),3], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2),3],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2),3],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2),3],final.out.put_total[[1]][[1]][[2]][c(1,2),3],
                      final.out.put_total[[1]][[2]][c(1,2),3],final.out.put_total[[2]][c(1,2),3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+4,3], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+4,3], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+4,3],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+4,3],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+4,3],final.out.put_total[[1]][[1]][[2]][c(4,4)+4,3],
                      final.out.put_total[[1]][[2]][c(4,4)+4,3],final.out.put_total[[2]][c(4,4)+4,3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+4,3],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+4,3], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+4,3],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+4,3],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+4,3],final.out.put_total[[1]][[1]][[2]][c(1,2)+4,3],
                      final.out.put_total[[1]][[2]][c(1,2)+4,3],final.out.put_total[[2]][c(1,2)+4,3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+8,3],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+8,3], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+8,3],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+8,3],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+8,3],final.out.put_total[[1]][[1]][[2]][c(4,4)+8,3],
                      final.out.put_total[[1]][[2]][c(4,4)+8,3],final.out.put_total[[2]][c(4,4)+8,3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+8,3],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+8,3], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+8,3],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+8,3],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+8,3],final.out.put_total[[1]][[1]][[2]][c(1,2)+8,3],
                      final.out.put_total[[1]][[2]][c(1,2)+8,3],final.out.put_total[[2]][c(1,2)+8,3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+12,3],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+12,3], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+12,3],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+12,3],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+12,3],final.out.put_total[[1]][[1]][[2]][c(4,4)+12,3],
                      final.out.put_total[[1]][[2]][c(4,4)+12,3],final.out.put_total[[2]][c(4,4)+12,3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+12,3],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+12,3], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+12,3],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+12,3],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+12,3],final.out.put_total[[1]][[1]][[2]][c(1,2)+12,3],
                      final.out.put_total[[1]][[2]][c(1,2)+12,3],final.out.put_total[[2]][c(1,2)+12,3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+16,3],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+16,3], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+16,3],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+16,3],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+16,3],final.out.put_total[[1]][[1]][[2]][c(4,4)+16,3],
                      final.out.put_total[[1]][[2]][c(4,4)+16,3],final.out.put_total[[2]][c(4,4)+16,3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+16,3],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+16,3], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+16,3],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+16,3],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+16,3],final.out.put_total[[1]][[1]][[2]][c(1,2)+16,3],
                      final.out.put_total[[1]][[2]][c(1,2)+16,3],final.out.put_total[[2]][c(1,2)+16,3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+20,3], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+20,3], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+20,3],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+20,3],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+20,3],final.out.put_total[[1]][[1]][[2]][c(4,4)+20,3],
                      final.out.put_total[[1]][[2]][c(4,4)+20,3],final.out.put_total[[2]][c(4,4)+20,3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+20,3],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+20,3], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+20,3],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+20,3],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+20,3],final.out.put_total[[1]][[1]][[2]][c(1,2)+20,3],
                      final.out.put_total[[1]][[2]][c(1,2)+20,3],final.out.put_total[[2]][c(1,2)+20,3])
                    
                    
)
) 
,3)
table[table<0]=0

table[c(1,3,5,7,9,11),c(1,3,5,7,9,11,13,15)]
table[c(1,3,5,7,9,11)+1,]
##############phi##################################################################################################################################################
table=round(t(cbind(c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4),4],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4),4], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4),4],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4),4],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4),4],final.out.put_total[[1]][[1]][[2]][c(4,4),4],
                      final.out.put_total[[1]][[2]][c(4,4),4],final.out.put_total[[2]][c(4,4),4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2),4],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2),4], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2),4],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2),4],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2),4],final.out.put_total[[1]][[1]][[2]][c(1,2),4],
                      final.out.put_total[[1]][[2]][c(1,2),4],final.out.put_total[[2]][c(1,2),4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+4,4], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+4,4], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+4,4],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+4,4],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+4,4],final.out.put_total[[1]][[1]][[2]][c(4,4)+4,4],
                      final.out.put_total[[1]][[2]][c(4,4)+4,4],final.out.put_total[[2]][c(4,4)+4,4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+4,4],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+4,4], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+4,4],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+4,4],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+4,4],final.out.put_total[[1]][[1]][[2]][c(1,2)+4,4],
                      final.out.put_total[[1]][[2]][c(1,2)+4,4],final.out.put_total[[2]][c(1,2)+4,4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+8,4],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+8,4], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+8,4],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+8,4],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+8,4],final.out.put_total[[1]][[1]][[2]][c(4,4)+8,4],
                      final.out.put_total[[1]][[2]][c(4,4)+8,4],final.out.put_total[[2]][c(4,4)+8,4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+8,4],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+8,4], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+8,4],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+8,4],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+8,4],final.out.put_total[[1]][[1]][[2]][c(1,2)+8,4],
                      final.out.put_total[[1]][[2]][c(1,2)+8,4],final.out.put_total[[2]][c(1,2)+8,4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+12,4],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+12,4], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+12,4],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+12,4],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+12,4],final.out.put_total[[1]][[1]][[2]][c(4,4)+12,4],
                      final.out.put_total[[1]][[2]][c(4,4)+12,4],final.out.put_total[[2]][c(4,4)+12,4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+12,4],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+12,4], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+12,4],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+12,4],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+12,4],final.out.put_total[[1]][[1]][[2]][c(1,2)+12,4],
                      final.out.put_total[[1]][[2]][c(1,2)+12,4],final.out.put_total[[2]][c(1,2)+12,4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+16,4],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+16,4], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+16,4],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+16,4],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+16,4],final.out.put_total[[1]][[1]][[2]][c(4,4)+16,4],
                      final.out.put_total[[1]][[2]][c(4,4)+16,4],final.out.put_total[[2]][c(4,4)+16,4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+16,4],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+16,4], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+16,4],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+16,4],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+16,4],final.out.put_total[[1]][[1]][[2]][c(1,2)+16,4],
                      final.out.put_total[[1]][[2]][c(1,2)+16,4],final.out.put_total[[2]][c(1,2)+16,4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+20,4], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+20,4], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+20,4],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+20,4],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+20,4],final.out.put_total[[1]][[1]][[2]][c(4,4)+20,4],
                      final.out.put_total[[1]][[2]][c(4,4)+20,4],final.out.put_total[[2]][c(4,4)+20,4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+20,4],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+20,4], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+20,4],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+20,4],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+20,4],final.out.put_total[[1]][[1]][[2]][c(1,2)+20,4],
                      final.out.put_total[[1]][[2]][c(1,2)+20,4],final.out.put_total[[2]][c(1,2)+20,4])
                    
                    
)
) 
,3)

table[table<0]=0

table[c(1,3,5,7,9,11),c(1,3,5,7,9,11,13,15)]
table[c(1,3,5,7,9,11)+1,]


##############phi_1##################################################################################################################################################
table=round(t(cbind(c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4),5],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4),5], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4),5],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4),5],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4),5],final.out.put_total[[1]][[1]][[2]][c(4,4),5],
                      final.out.put_total[[1]][[2]][c(4,4),5],final.out.put_total[[2]][c(4,4),5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2),5],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2),5], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2),5],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2),5],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2),5],final.out.put_total[[1]][[1]][[2]][c(1,2),5],
                      final.out.put_total[[1]][[2]][c(1,2),5],final.out.put_total[[2]][c(1,2),5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+4,5], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+4,5], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+4,5],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+4,5],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+4,5],final.out.put_total[[1]][[1]][[2]][c(4,4)+4,5],
                      final.out.put_total[[1]][[2]][c(4,4)+4,5],final.out.put_total[[2]][c(4,4)+4,5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+4,5],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+4,5], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+4,5],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+4,5],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+4,5],final.out.put_total[[1]][[1]][[2]][c(1,2)+4,5],
                      final.out.put_total[[1]][[2]][c(1,2)+4,5],final.out.put_total[[2]][c(1,2)+4,5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+8,5],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+8,5], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+8,5],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+8,5],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+8,5],final.out.put_total[[1]][[1]][[2]][c(4,4)+8,5],
                      final.out.put_total[[1]][[2]][c(4,4)+8,5],final.out.put_total[[2]][c(4,4)+8,5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+8,5],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+8,5], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+8,5],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+8,5],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+8,5],final.out.put_total[[1]][[1]][[2]][c(1,2)+8,5],
                      final.out.put_total[[1]][[2]][c(1,2)+8,5],final.out.put_total[[2]][c(1,2)+8,5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+12,5],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+12,5], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+12,5],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+12,5],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+12,5],final.out.put_total[[1]][[1]][[2]][c(4,4)+12,5],
                      final.out.put_total[[1]][[2]][c(4,4)+12,5],final.out.put_total[[2]][c(4,4)+12,5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+12,5],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+12,5], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+12,5],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+12,5],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+12,5],final.out.put_total[[1]][[1]][[2]][c(1,2)+12,5],
                      final.out.put_total[[1]][[2]][c(1,2)+12,5],final.out.put_total[[2]][c(1,2)+12,5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+16,5],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+16,5], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+16,5],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+16,5],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+16,5],final.out.put_total[[1]][[1]][[2]][c(4,4)+16,5],
                      final.out.put_total[[1]][[2]][c(4,4)+16,5],final.out.put_total[[2]][c(4,4)+16,5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+16,5],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+16,5], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+16,5],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+16,5],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+16,5],final.out.put_total[[1]][[1]][[2]][c(1,2)+16,5],
                      final.out.put_total[[1]][[2]][c(1,2)+16,5],final.out.put_total[[2]][c(1,2)+16,5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+20,5], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+20,5], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+20,5],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+20,5],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+20,5],final.out.put_total[[1]][[1]][[2]][c(4,4)+20,5],
                      final.out.put_total[[1]][[2]][c(4,4)+20,5],final.out.put_total[[2]][c(4,4)+20,5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+20,5],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+20,5], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(1,2)+20,5],
                      final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+20,5],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+20,5],final.out.put_total[[1]][[1]][[2]][c(1,2)+20,5],
                      final.out.put_total[[1]][[2]][c(1,2)+20,5],final.out.put_total[[2]][c(1,2)+20,5])
                    
                    
)
) 
,3)

table[c(1,3,5,7,9,11),c(1,3,5,7,9,11,13,15)]
table[c(1,3,5,7,9,11)+1,]

##############MaxPro##################################################################################################################################################
table=round(1/t(cbind(c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4),6],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4),6], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4),6],
                        final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4),6],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4),6],final.out.put_total[[1]][[1]][[2]][c(4,4),6],
                        final.out.put_total[[1]][[2]][c(4,4),6],final.out.put_total[[2]][c(4,4),6]),
                      
                      c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(2,1),6],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(2,1),6], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(2,1),6],
                        final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(2,1),6],final.out.put_total[[1]][[1]][[1]][[2]][c(2,1),6],final.out.put_total[[1]][[1]][[2]][c(2,1),6],
                        final.out.put_total[[1]][[2]][c(2,1),6],final.out.put_total[[2]][c(2,1),6]),
                      
                      c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+4,6], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+4,6], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+4,6],
                        final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+4,6],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+4,6],final.out.put_total[[1]][[1]][[2]][c(4,4)+4,6],
                        final.out.put_total[[1]][[2]][c(4,4)+4,6],final.out.put_total[[2]][c(4,4)+4,6]),
                      
                      c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(2,1)+4,6],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(2,1)+4,6], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(2,1)+4,6],
                        final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(2,1)+4,6],final.out.put_total[[1]][[1]][[1]][[2]][c(2,1)+4,6],final.out.put_total[[1]][[1]][[2]][c(2,1)+4,6],
                        final.out.put_total[[1]][[2]][c(2,1)+4,6],final.out.put_total[[2]][c(2,1)+4,6]),
                      
                      c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+8,6],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+8,6], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+8,6],
                        final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+8,6],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+8,6],final.out.put_total[[1]][[1]][[2]][c(4,4)+8,6],
                        final.out.put_total[[1]][[2]][c(4,4)+8,6],final.out.put_total[[2]][c(4,4)+8,6]),
                      
                      c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(2,1)+8,6],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(2,1)+8,6], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(2,1)+8,6],
                        final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(2,1)+8,6],final.out.put_total[[1]][[1]][[1]][[2]][c(2,1)+8,6],final.out.put_total[[1]][[1]][[2]][c(2,1)+8,6],
                        final.out.put_total[[1]][[2]][c(2,1)+8,6],final.out.put_total[[2]][c(2,1)+8,6]),
                      
                      c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+12,6],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+12,6], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+12,6],
                        final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+12,6],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+12,6],final.out.put_total[[1]][[1]][[2]][c(4,4)+12,6],
                        final.out.put_total[[1]][[2]][c(4,4)+12,6],final.out.put_total[[2]][c(4,4)+12,6]),
                      
                      c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(2,1)+12,6],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(2,1)+12,6], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(2,1)+12,6],
                        final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(2,1)+12,6],final.out.put_total[[1]][[1]][[1]][[2]][c(2,1)+12,6],final.out.put_total[[1]][[1]][[2]][c(2,1)+12,6],
                        final.out.put_total[[1]][[2]][c(2,1)+12,6],final.out.put_total[[2]][c(2,1)+12,6]),
                      
                      c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+16,6],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+16,6], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+16,6],
                        final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+16,6],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+16,6],final.out.put_total[[1]][[1]][[2]][c(4,4)+16,6],
                        final.out.put_total[[1]][[2]][c(4,4)+16,6],final.out.put_total[[2]][c(4,4)+16,6]),
                      
                      c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(2,1)+16,6],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(2,1)+16,6], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(2,1)+16,6],
                        final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(2,1)+16,6],final.out.put_total[[1]][[1]][[1]][[2]][c(2,1)+16,6],final.out.put_total[[1]][[1]][[2]][c(2,1)+16,6],
                        final.out.put_total[[1]][[2]][c(2,1)+16,6],final.out.put_total[[2]][c(2,1)+16,6]),
                      
                      c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+20,6], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+20,6], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(4,4)+20,6],
                        final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+20,6],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+20,6],final.out.put_total[[1]][[1]][[2]][c(4,4)+20,6],
                        final.out.put_total[[1]][[2]][c(4,4)+20,6],final.out.put_total[[2]][c(4,4)+20,6]),
                      
                      c(final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(2,1)+20,6],final.out.put_total[[1]][[1]][[1]][[1]][[1]][[1]][[2]][c(2,1)+20,6], final.out.put_total[[1]][[1]][[1]][[1]][[1]][[2]][c(2,1)+20,6],
                        final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(2,1)+20,6],final.out.put_total[[1]][[1]][[1]][[2]][c(2,1)+20,6],final.out.put_total[[1]][[1]][[2]][c(2,1)+20,6],
                        final.out.put_total[[1]][[2]][c(2,1)+20,6],final.out.put_total[[2]][c(2,1)+20,6])
                      
                      
)
) 
,3)


table[c(1,3,5,7,9,11),c(1,3,5,7,9,11,13,15)]
table[c(1,3,5,7,9,11)+1,]
#####################################################################################################################
#####5,7,8,9,6,10,30,42######################################################################################

library(SLHD)
library(lhs)
library(MaxPro)
ntotal=100
NN=c(9,11,23,13,19)
T=1
total=200
r=0.95
step=10
delta=0.01^2
NNNN=40
final.out.put_total=c(1)
for (jj in 1:5){
  mtotal=NULL
  N=NN[jj]
  N0=length(Euler(N))
  mtotal=c(2:(N*N0))
  Recom_naive=matrix(0,6,N*N0-1)
  Recom_ACE=matrix(0,6,N*N0-1)
  Recom_half_ACE=matrix(0,6,N*N0-1)
  Recom_mixed_ACE=matrix(0,6,N*N0-1)
  Recom_SLHD=matrix(0,6,N*N0-1)
  Recom_lhd=matrix(0,6,N*N0-1)
  Recom_rho_LB=sapply(2:(N*N0), FUN=function(x){return(LB_rho(N-1,x))})
  Recom_phi_LB=sapply(2:(N*N0), FUN=function(x){return(LB_phi(N-1,x))})
  for (i in 1:ntotal){
    final.out.put_naive=mclapply(2:(N*N0), FUN=function(x){D1=SA_leave_one_out_naive(N,x,T,1,total,r);D2=SA_leave_one_out_naive(N,x,T,2,total,r);return(c(L_2(D1,1),L_2(D2,2),Coff(D2),UNI_PRO(D1),phi_p(D1,1),MaxProMeasure(D1,p_nom=0)))}, mc.cores = NNNN)
    Recom_naive=Recom_naive+sapply(1:(N*N0-1),function(x){final.out.put_naive[[x]]})
    
    final.out.put_ACE=mclapply(2:(N*N0), FUN=function(x){D1=SA_leave_one_out_ACE_combined(N,x,T,1,total,r,step,delta);D2=SA_leave_one_out_ACE_combined(N,x,T,2,total,r,step,delta);return(c(L_2(D1,1),L_2(D2,2),Coff(D2),UNI_PRO(D1),phi_p(D1,1),MaxProMeasure(D1,p_nom=0)))}, mc.cores = NNNN)
    Recom_ACE=Recom_ACE+sapply(1:(N*N0-1),function(x){final.out.put_ACE[[x]]})
    
    final.out.put_half_ACE=mclapply(2:(N*N0), FUN=function(x){D1=SA_leave_one_out_half_ACE_combined(N,x,T,1,total,r,step,delta);D2=SA_leave_one_out_half_ACE_combined(N,x,T,2,total,r,step,delta);return(c(L_2(D1,1),L_2(D2,2),Coff(D2),UNI_PRO(D1),phi_p(D1,1),MaxProMeasure(D1,p_nom=0)))}, mc.cores = NNNN)
    Recom_half_ACE=Recom_half_ACE+sapply(1:(N*N0-1),function(x){final.out.put_half_ACE[[x]]})
    
    final.out.put_mixed_ACE=mclapply(2:(N*N0), FUN=function(x){D1=SA_leave_one_out_mixed_ACE_combined(N,x,T,1,total,r,step,delta);D2=SA_leave_one_out_mixed_ACE_combined(N,x,T,2,total,r,step,delta);return(c(L_2(D1,1),L_2(D2,2),Coff(D2),UNI_PRO(D1),phi_p(D1,1),MaxProMeasure(D1,p_nom=0)))}, mc.cores = NNNN)
    Recom_mixed_ACE=Recom_mixed_ACE+sapply(1:(N*N0-1),function(x){final.out.put_mixed_ACE[[x]]})
    
    final.out.put_SLHD=mclapply(2:(N*N0), FUN=function(x){D=maximinSLHD(1, N-1, x, power = 15, nstarts = 1, itermax = 1, total_iter =total)$Design;return(c(L_2(D,1),L_2(D,2),Coff(D),UNI_PRO(D),phi_p(D,1),MaxProMeasure(D,p_nom=0)))}, mc.cores = NNNN)
    Recom_SLHD=Recom_SLHD+sapply(1:(N*N0-1),function(x){final.out.put_SLHD[[x]]})
    
    final.out.put_lhd=mclapply(2:(N*N0), FUN=function(x){aa=maximinLHS(N-1,x, method="iterative", eps=0.05, maxIter=total, optimize.on="grid");D=sapply(1:x,function(x){order(aa[,x])});return(c(L_2(D,1),L_2(D,2),Coff(D),UNI_PRO(D),phi_p(D,1),MaxProMeasure(D,p_nom=0)))}, mc.cores = NNNN)
    Recom_lhd=Recom_lhd+sapply(1:(N*N0-1),function(x){final.out.put_lhd[[x]]})
    
  }
  final.out.put_total=list(final.out.put_total,cbind(c(min(Recom_naive[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)), max(Recom_naive[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)), mean(Recom_naive[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)),median(Recom_naive[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)),
                                                       min(Recom_ACE[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)), max(Recom_ACE[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)), mean(Recom_ACE[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)),median(Recom_ACE[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)),
                                                       min(Recom_half_ACE[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)), max(Recom_half_ACE[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)), mean(Recom_half_ACE[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)),median(Recom_half_ACE[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)),
                                                       min(Recom_mixed_ACE[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)), max(Recom_mixed_ACE[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)), mean(Recom_mixed_ACE[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)),median(Recom_mixed_ACE[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)),
                                                       min(Recom_SLHD[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)), max(Recom_SLHD[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)), mean(Recom_SLHD[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)),median(Recom_SLHD[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)),
                                                       min(Recom_lhd[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)), max(Recom_lhd[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)), mean(Recom_lhd[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3)),median(Recom_lhd[1,1:(N*N0-1)]/ntotal/floor((N)*(2:(N*N0))/3))),
                                                     
                                                     c(min(Recom_naive[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)), max(Recom_naive[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)), mean(Recom_naive[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)),median(Recom_naive[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)),
                                                       min(Recom_ACE[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)), max(Recom_ACE[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)), mean(Recom_ACE[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)),median(Recom_ACE[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)),
                                                       min(Recom_half_ACE[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)), max(Recom_half_ACE[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)), mean(Recom_half_ACE[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)),median(Recom_half_ACE[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)),
                                                       min(Recom_mixed_ACE[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)), max(Recom_mixed_ACE[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)), mean(Recom_mixed_ACE[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)),median(Recom_mixed_ACE[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)),
                                                       min(Recom_SLHD[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)), max(Recom_SLHD[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)), mean(Recom_SLHD[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)),median(Recom_SLHD[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)),
                                                       min(Recom_lhd[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)), max(Recom_lhd[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)), mean(Recom_lhd[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6)),median(Recom_lhd[2,1:(N*N0-1)]/ntotal/floor((N-1)*(2:(N*N0))*N/6))),
                                                     
                                                     c(min(Recom_rho_LB/Recom_naive[3,1:(N*N0-1)]*ntotal), max(Recom_rho_LB/Recom_naive[3,1:(N*N0-1)]*ntotal), mean(Recom_rho_LB/Recom_naive[3,1:(N*N0-1)]*ntotal),median(Recom_rho_LB/Recom_naive[3,1:(N*N0-1)]*ntotal),
                                                       min(Recom_rho_LB/Recom_ACE[3,1:(N*N0-1)]*ntotal), max(Recom_rho_LB/Recom_ACE[3,1:(N*N0-1)]*ntotal), mean(Recom_rho_LB/Recom_ACE[3,1:(N*N0-1)]*ntotal),median(Recom_rho_LB/Recom_ACE[3,1:(N*N0-1)]*ntotal),
                                                       min(Recom_rho_LB/Recom_half_ACE[3,1:(N*N0-1)]*ntotal), max(Recom_rho_LB/Recom_half_ACE[3,1:(N*N0-1)]*ntotal), mean(Recom_rho_LB/Recom_half_ACE[3,1:(N*N0-1)]*ntotal),median(Recom_rho_LB/Recom_half_ACE[3,1:(N*N0-1)]*ntotal),
                                                       min(Recom_rho_LB/Recom_mixed_ACE[3,1:(N*N0-1)]*ntotal), max(Recom_rho_LB/Recom_mixed_ACE[3,1:(N*N0-1)]*ntotal), mean(Recom_rho_LB/Recom_mixed_ACE[3,1:(N*N0-1)]*ntotal),median(Recom_rho_LB/Recom_mixed_ACE[3,1:(N*N0-1)]*ntotal),
                                                       min(Recom_rho_LB/Recom_SLHD[3,1:(N*N0-1)]*ntotal), max(Recom_rho_LB/Recom_SLHD[3,1:(N*N0-1)]*ntotal), mean(Recom_rho_LB/Recom_SLHD[3,1:(N*N0-1)]*ntotal),median(Recom_rho_LB/Recom_SLHD[3,1:(N*N0-1)]*ntotal),
                                                       min(Recom_rho_LB/Recom_lhd[3,1:(N*N0-1)]*ntotal), max(Recom_rho_LB/Recom_lhd[3,1:(N*N0-1)]*ntotal), mean(Recom_rho_LB/Recom_lhd[3,1:(N*N0-1)]*ntotal),median(Recom_rho_LB/Recom_lhd[3,1:(N*N0-1)]*ntotal)),
                                                     
                                                     c(min(Recom_phi_LB/Recom_naive[4,1:(N*N0-1)]*ntotal), max(Recom_phi_LB/Recom_naive[4,1:(N*N0-1)]*ntotal), mean(Recom_phi_LB/Recom_naive[4,1:(N*N0-1)]*ntotal),median(Recom_phi_LB/Recom_naive[4,1:(N*N0-1)]*ntotal),
                                                       min(Recom_phi_LB/Recom_ACE[4,1:(N*N0-1)]*ntotal), max(Recom_phi_LB/Recom_ACE[4,1:(N*N0-1)]*ntotal), mean(Recom_phi_LB/Recom_ACE[4,1:(N*N0-1)]*ntotal),median(Recom_phi_LB/Recom_ACE[4,1:(N*N0-1)]*ntotal),
                                                       min(Recom_phi_LB/Recom_half_ACE[4,1:(N*N0-1)]*ntotal), max(Recom_phi_LB/Recom_half_ACE[4,1:(N*N0-1)]*ntotal), mean(Recom_phi_LB/Recom_half_ACE[4,1:(N*N0-1)]*ntotal),median(Recom_phi_LB/Recom_half_ACE[4,1:(N*N0-1)]*ntotal),
                                                       min(Recom_phi_LB/Recom_mixed_ACE[4,1:(N*N0-1)]*ntotal), max(Recom_phi_LB/Recom_mixed_ACE[4,1:(N*N0-1)]*ntotal), mean(Recom_phi_LB/Recom_mixed_ACE[4,1:(N*N0-1)]*ntotal),median(Recom_phi_LB/Recom_mixed_ACE[4,1:(N*N0-1)]*ntotal),
                                                       min(Recom_phi_LB/Recom_SLHD[4,1:(N*N0-1)]*ntotal), max(Recom_phi_LB/Recom_SLHD[4,1:(N*N0-1)]*ntotal), mean(Recom_phi_LB/Recom_SLHD[4,1:(N*N0-1)]*ntotal),median(Recom_phi_LB/Recom_SLHD[4,1:(N*N0-1)]*ntotal),
                                                       min(Recom_phi_LB/Recom_lhd[4,1:(N*N0-1)]*ntotal), max(Recom_phi_LB/Recom_lhd[4,1:(N*N0-1)]*ntotal), mean(Recom_phi_LB/Recom_lhd[4,1:(N*N0-1)]*ntotal),median(Recom_phi_LB/Recom_lhd[4,1:(N*N0-1)]*ntotal)),
                                                     
                                                     c(min((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_naive[5,1:(N*N0-1)]), max((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_naive[5,1:(N*N0-1)]), mean((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_naive[5,1:(N*N0-1)]),median((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_naive[5,1:(N*N0-1)]),
                                                       min((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_ACE[5,1:(N*N0-1)]), max((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_ACE[5,1:(N*N0-1)]), mean((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_ACE[5,1:(N*N0-1)]),median((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_ACE[5,1:(N*N0-1)]),
                                                       min((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_half_ACE[5,1:(N*N0-1)]), max((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_half_ACE[5,1:(N*N0-1)]), mean((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_half_ACE[5,1:(N*N0-1)]),median((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_half_ACE[5,1:(N*N0-1)]),
                                                       min((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_mixed_ACE[5,1:(N*N0-1)]), max((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_mixed_ACE[5,1:(N*N0-1)]), mean((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_mixed_ACE[5,1:(N*N0-1)]),median((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_mixed_ACE[5,1:(N*N0-1)]),
                                                       min((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_SLHD[5,1:(N*N0-1)]), max((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_SLHD[5,1:(N*N0-1)]), mean((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_SLHD[5,1:(N*N0-1)]),median((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_SLHD[5,1:(N*N0-1)]),
                                                       min((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_lhd[5,1:(N*N0-1)]), max((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_lhd[5,1:(N*N0-1)]), mean((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_lhd[5,1:(N*N0-1)]),median((N-1)*(N-2)/2/(N*mtotal/3)*ntotal/Recom_lhd[5,1:(N*N0-1)])),
                                                     
                                                     
                                                     c(min(ntotal/Recom_naive[6,1:(N*N0-1)]), max(ntotal/Recom_naive[6,1:(N*N0-1)]), mean(ntotal/Recom_naive[6,1:(N*N0-1)]),median(ntotal/Recom_naive[6,1:(N*N0-1)]),
                                                       min(ntotal/Recom_ACE[6,1:(N*N0-1)]), max(ntotal/Recom_ACE[6,1:(N*N0-1)]), mean(ntotal/Recom_ACE[6,1:(N*N0-1)]),median(ntotal/Recom_ACE[6,1:(N*N0-1)]),
                                                       min(ntotal/Recom_half_ACE[6,1:(N*N0-1)]), max(ntotal/Recom_half_ACE[6,1:(N*N0-1)]), mean(ntotal/Recom_half_ACE[6,1:(N*N0-1)]),median(ntotal/Recom_half_ACE[6,1:(N*N0-1)]),
                                                       min(ntotal/Recom_mixed_ACE[6,1:(N*N0-1)]), max(ntotal/Recom_mixed_ACE[6,1:(N*N0-1)]), mean(ntotal/Recom_mixed_ACE[6,1:(N*N0-1)]),median(ntotal/Recom_mixed_ACE[6,1:(N*N0-1)]),
                                                       min(ntotal/Recom_SLHD[6,1:(N*N0-1)]), max(ntotal/Recom_SLHD[6,1:(N*N0-1)]), mean(ntotal/Recom_SLHD[6,1:(N*N0-1)]),median(ntotal/Recom_SLHD[6,1:(N*N0-1)]),
                                                       min(ntotal/Recom_lhd[6,1:(N*N0-1)]), max(ntotal/Recom_lhd[6,1:(N*N0-1)]), mean(ntotal/Recom_lhd[6,1:(N*N0-1)]),median(ntotal/Recom_lhd[6,1:(N*N0-1)]))
                                                     
  )
  )
}


##############L_1##################################################################################################################################################

table=round(t(cbind(c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4),1],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4),1],final.out.put_total[[1]][[1]][[2]][c(4,4),1],
                      final.out.put_total[[1]][[2]][c(4,4),1],final.out.put_total[[2]][c(4,4),1]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2),1],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2),1],final.out.put_total[[1]][[1]][[2]][c(1,2),1],
                      final.out.put_total[[1]][[2]][c(1,2),1],final.out.put_total[[2]][c(1,2),1]),
                    
                    c( final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+4,1],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+4,1],final.out.put_total[[1]][[1]][[2]][c(4,4)+4,1],
                      final.out.put_total[[1]][[2]][c(4,4)+4,1],final.out.put_total[[2]][c(4,4)+4,1]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+4,1],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+4,1],final.out.put_total[[1]][[1]][[2]][c(1,2)+4,1],
                      final.out.put_total[[1]][[2]][c(1,2)+4,1],final.out.put_total[[2]][c(1,2)+4,1]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+8,1],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+8,1],final.out.put_total[[1]][[1]][[2]][c(4,4)+8,1],
                      final.out.put_total[[1]][[2]][c(4,4)+8,1],final.out.put_total[[2]][c(4,4)+8,1]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+8,1],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+8,1],final.out.put_total[[1]][[1]][[2]][c(1,2)+8,1],
                      final.out.put_total[[1]][[2]][c(1,2)+8,1],final.out.put_total[[2]][c(1,2)+8,1]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+12,1],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+12,1],final.out.put_total[[1]][[1]][[2]][c(4,4)+12,1],
                      final.out.put_total[[1]][[2]][c(4,4)+12,1],final.out.put_total[[2]][c(4,4)+12,1]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+12,1],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+12,1],final.out.put_total[[1]][[1]][[2]][c(1,2)+12,1],
                      final.out.put_total[[1]][[2]][c(1,2)+12,1],final.out.put_total[[2]][c(1,2)+12,1])
                    
                    
)
) 
,3)

table[c(1,3,5,7),c(1,3,5,7,9)]
table[c(1,3,5,7)+1,]
##############L_2##################################################################################################################################################
table=round(t(cbind(c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4),2],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4),2],final.out.put_total[[1]][[1]][[2]][c(4,4),2],
                      final.out.put_total[[1]][[2]][c(4,4),2],final.out.put_total[[2]][c(4,4),2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2),2],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2),2],final.out.put_total[[1]][[1]][[2]][c(1,2),2],
                      final.out.put_total[[1]][[2]][c(1,2),2],final.out.put_total[[2]][c(1,2),2]),
                    
                    c( final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+4,2],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+4,2],final.out.put_total[[1]][[1]][[2]][c(4,4)+4,2],
                       final.out.put_total[[1]][[2]][c(4,4)+4,2],final.out.put_total[[2]][c(4,4)+4,2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+4,2],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+4,2],final.out.put_total[[1]][[1]][[2]][c(1,2)+4,2],
                      final.out.put_total[[1]][[2]][c(1,2)+4,2],final.out.put_total[[2]][c(1,2)+4,2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+8,2],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+8,2],final.out.put_total[[1]][[1]][[2]][c(4,4)+8,2],
                      final.out.put_total[[1]][[2]][c(4,4)+8,2],final.out.put_total[[2]][c(4,4)+8,2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+8,2],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+8,2],final.out.put_total[[1]][[1]][[2]][c(1,2)+8,2],
                      final.out.put_total[[1]][[2]][c(1,2)+8,2],final.out.put_total[[2]][c(1,2)+8,2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+12,2],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+12,2],final.out.put_total[[1]][[1]][[2]][c(4,4)+12,2],
                      final.out.put_total[[1]][[2]][c(4,4)+12,2],final.out.put_total[[2]][c(4,4)+12,2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+12,2],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+12,2],final.out.put_total[[1]][[1]][[2]][c(1,2)+12,2],
                      final.out.put_total[[1]][[2]][c(1,2)+12,2],final.out.put_total[[2]][c(1,2)+12,2])
                    
                    
)
) 
,3)

table[c(1,3,5,7),c(1,3,5,7,9)]
table[c(1,3,5,7)+1,]


##############rho^2##################################################################################################################################################

table=round(t(cbind(c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4),3],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4),3],final.out.put_total[[1]][[1]][[2]][c(4,4),3],
                      final.out.put_total[[1]][[2]][c(4,4),3],final.out.put_total[[2]][c(4,4),3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2),3],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2),3],final.out.put_total[[1]][[1]][[2]][c(1,2),3],
                      final.out.put_total[[1]][[2]][c(1,2),3],final.out.put_total[[2]][c(1,2),3]),
                    
                    c( final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+4,3],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+4,3],final.out.put_total[[1]][[1]][[2]][c(4,4)+4,3],
                       final.out.put_total[[1]][[2]][c(4,4)+4,3],final.out.put_total[[2]][c(4,4)+4,3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+4,3],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+4,3],final.out.put_total[[1]][[1]][[2]][c(1,2)+4,3],
                      final.out.put_total[[1]][[2]][c(1,2)+4,3],final.out.put_total[[2]][c(1,2)+4,3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+8,3],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+8,3],final.out.put_total[[1]][[1]][[2]][c(4,4)+8,3],
                      final.out.put_total[[1]][[2]][c(4,4)+8,3],final.out.put_total[[2]][c(4,4)+8,3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+8,3],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+8,3],final.out.put_total[[1]][[1]][[2]][c(1,2)+8,3],
                      final.out.put_total[[1]][[2]][c(1,2)+8,3],final.out.put_total[[2]][c(1,2)+8,3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+12,3],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+12,3],final.out.put_total[[1]][[1]][[2]][c(4,4)+12,3],
                      final.out.put_total[[1]][[2]][c(4,4)+12,3],final.out.put_total[[2]][c(4,4)+12,3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+12,3],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+12,3],final.out.put_total[[1]][[1]][[2]][c(1,2)+12,3],
                      final.out.put_total[[1]][[2]][c(1,2)+12,3],final.out.put_total[[2]][c(1,2)+12,3])
                    
                    
)
) 
,3)

table[c(1,3,5,7),c(1,3,5,7,9)]
table[c(1,3,5,7)+1,]


##############phi##################################################################################################################################################
table=round(t(cbind(c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4),4],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4),4],final.out.put_total[[1]][[1]][[2]][c(4,4),4],
                      final.out.put_total[[1]][[2]][c(4,4),4],final.out.put_total[[2]][c(4,4),4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2),4],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2),4],final.out.put_total[[1]][[1]][[2]][c(1,2),4],
                      final.out.put_total[[1]][[2]][c(1,2),4],final.out.put_total[[2]][c(1,2),4]),
                    
                    c( final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+4,4],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+4,4],final.out.put_total[[1]][[1]][[2]][c(4,4)+4,4],
                       final.out.put_total[[1]][[2]][c(4,4)+4,4],final.out.put_total[[2]][c(4,4)+4,4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+4,4],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+4,4],final.out.put_total[[1]][[1]][[2]][c(1,2)+4,4],
                      final.out.put_total[[1]][[2]][c(1,2)+4,4],final.out.put_total[[2]][c(1,2)+4,4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+8,4],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+8,4],final.out.put_total[[1]][[1]][[2]][c(4,4)+8,4],
                      final.out.put_total[[1]][[2]][c(4,4)+8,4],final.out.put_total[[2]][c(4,4)+8,4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+8,4],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+8,4],final.out.put_total[[1]][[1]][[2]][c(1,2)+8,4],
                      final.out.put_total[[1]][[2]][c(1,2)+8,4],final.out.put_total[[2]][c(1,2)+8,4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+12,4],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+12,4],final.out.put_total[[1]][[1]][[2]][c(4,4)+12,4],
                      final.out.put_total[[1]][[2]][c(4,4)+12,4],final.out.put_total[[2]][c(4,4)+12,4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+12,4],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+12,4],final.out.put_total[[1]][[1]][[2]][c(1,2)+12,4],
                      final.out.put_total[[1]][[2]][c(1,2)+12,4],final.out.put_total[[2]][c(1,2)+12,4])
                    
                    
)
) 
,3)

table[table<0]=0
table[c(1,3,5,7),c(1,3,5,7,9)]
table[c(1,3,5,7)+1,]


##############phi_1##################################################################################################################################################
table=round(t(cbind(c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4),5],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4),5],final.out.put_total[[1]][[1]][[2]][c(4,4),5],
                      final.out.put_total[[1]][[2]][c(4,4),5],final.out.put_total[[2]][c(4,4),5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2),5],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2),5],final.out.put_total[[1]][[1]][[2]][c(1,2),5],
                      final.out.put_total[[1]][[2]][c(1,2),5],final.out.put_total[[2]][c(1,2),5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+4,5],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+4,5],final.out.put_total[[1]][[1]][[2]][c(4,4)+4,5],
                      final.out.put_total[[1]][[2]][c(4,4)+4,5],final.out.put_total[[2]][c(4,4)+4,5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+4,5],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+4,5],final.out.put_total[[1]][[1]][[2]][c(1,2)+4,5],
                      final.out.put_total[[1]][[2]][c(1,2)+4,5],final.out.put_total[[2]][c(1,2)+4,5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+8,5],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+8,5],final.out.put_total[[1]][[1]][[2]][c(4,4)+8,5],
                      final.out.put_total[[1]][[2]][c(4,4)+8,5],final.out.put_total[[2]][c(4,4)+8,5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+8,5],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+8,5],final.out.put_total[[1]][[1]][[2]][c(1,2)+8,5],
                      final.out.put_total[[1]][[2]][c(1,2)+8,5],final.out.put_total[[2]][c(1,2)+8,5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+12,5],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+12,5],final.out.put_total[[1]][[1]][[2]][c(4,4)+12,5],
                      final.out.put_total[[1]][[2]][c(4,4)+12,5],final.out.put_total[[2]][c(4,4)+12,5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+12,5],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+12,5],final.out.put_total[[1]][[1]][[2]][c(1,2)+12,5],
                      final.out.put_total[[1]][[2]][c(1,2)+12,5],final.out.put_total[[2]][c(1,2)+12,5])
                    
                    
)
) 
,3)

table[c(1,3,5,7),c(1,3,5,7,9)]
table[c(1,3,5,7)+1,]

##############MaxPro##################################################################################################################################################
table=round(1/t(cbind(c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4),6],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4),6],final.out.put_total[[1]][[1]][[2]][c(4,4),6],
                        final.out.put_total[[1]][[2]][c(4,4),6],final.out.put_total[[2]][c(4,4),6]),
                      
                      c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(2,1),6],final.out.put_total[[1]][[1]][[1]][[2]][c(2,1),6],final.out.put_total[[1]][[1]][[2]][c(2,1),6],
                        final.out.put_total[[1]][[2]][c(2,1),6],final.out.put_total[[2]][c(2,1),6]),
                      
                      c( final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+4,6],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+4,6],final.out.put_total[[1]][[1]][[2]][c(4,4)+4,6],
                        final.out.put_total[[1]][[2]][c(4,4)+4,6],final.out.put_total[[2]][c(4,4)+4,6]),
                      
                      c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(2,1)+4,6],final.out.put_total[[1]][[1]][[1]][[2]][c(2,1)+4,6],final.out.put_total[[1]][[1]][[2]][c(2,1)+4,6],
                        final.out.put_total[[1]][[2]][c(2,1)+4,6],final.out.put_total[[2]][c(2,1)+4,6]),
                      
                      c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+8,6],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+8,6],final.out.put_total[[1]][[1]][[2]][c(4,4)+8,6],
                        final.out.put_total[[1]][[2]][c(4,4)+8,6],final.out.put_total[[2]][c(4,4)+8,6]),
                      
                      c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(2,1)+8,6],final.out.put_total[[1]][[1]][[1]][[2]][c(2,1)+8,6],final.out.put_total[[1]][[1]][[2]][c(2,1)+8,6],
                        final.out.put_total[[1]][[2]][c(2,1)+8,6],final.out.put_total[[2]][c(2,1)+8,6]),
                      
                      c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+12,6],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+12,6],final.out.put_total[[1]][[1]][[2]][c(4,4)+12,6],
                        final.out.put_total[[1]][[2]][c(4,4)+12,6],final.out.put_total[[2]][c(4,4)+12,6]),
                      
                      c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(2,1)+12,6],final.out.put_total[[1]][[1]][[1]][[2]][c(2,1)+12,6],final.out.put_total[[1]][[1]][[2]][c(2,1)+12,6],
                        final.out.put_total[[1]][[2]][c(2,1)+12,6],final.out.put_total[[2]][c(2,1)+12,6])
                      
                     
                      
                      
)
) 
,3)

table[c(1,3,5,7),c(1,3,5,7,9)]
table[c(1,3,5,7)+1,]




#########supplementary##################################
###L_1#####
table=round(t(cbind(c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4),1],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4),1],final.out.put_total[[1]][[1]][[2]][c(4,4),1],
                      final.out.put_total[[1]][[2]][c(4,4),1],final.out.put_total[[2]][c(4,4),1]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2),1],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2),1],final.out.put_total[[1]][[1]][[2]][c(1,2),1],
                      final.out.put_total[[1]][[2]][c(1,2),1],final.out.put_total[[2]][c(1,2),1]),
                    
                    c( final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+4,1],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+4,1],final.out.put_total[[1]][[1]][[2]][c(4,4)+4,1],
                       final.out.put_total[[1]][[2]][c(4,4)+4,1],final.out.put_total[[2]][c(4,4)+4,1]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+4,1],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+4,1],final.out.put_total[[1]][[1]][[2]][c(1,2)+4,1],
                      final.out.put_total[[1]][[2]][c(1,2)+4,1],final.out.put_total[[2]][c(1,2)+4,1])
                    
                  
                    
                    
)
) 
,3)

table[c(1,3),c(1,3,5,7,9)]
table[c(1,3)+1,]


###L_2#####

table=round(t(cbind(c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4),2],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4),2],final.out.put_total[[1]][[1]][[2]][c(4,4),2],
                      final.out.put_total[[1]][[2]][c(4,4),2],final.out.put_total[[2]][c(4,4),2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2),2],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2),2],final.out.put_total[[1]][[1]][[2]][c(1,2),2],
                      final.out.put_total[[1]][[2]][c(1,2),2],final.out.put_total[[2]][c(1,2),2]),
                    
                    c( final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+4,2],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+4,2],final.out.put_total[[1]][[1]][[2]][c(4,4)+4,2],
                       final.out.put_total[[1]][[2]][c(4,4)+4,2],final.out.put_total[[2]][c(4,4)+4,2]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+4,2],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+4,2],final.out.put_total[[1]][[1]][[2]][c(1,2)+4,2],
                      final.out.put_total[[1]][[2]][c(1,2)+4,2],final.out.put_total[[2]][c(1,2)+4,2])
                    
                    
                    
                    
)
) 
,3)

table[c(1,3),c(1,3,5,7,9)]
table[c(1,3)+1,]


###rho^2#####
table=round(t(cbind(c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4),3],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4),3],final.out.put_total[[1]][[1]][[2]][c(4,4),3],
                      final.out.put_total[[1]][[2]][c(4,4),3],final.out.put_total[[2]][c(4,4),3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2),3],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2),3],final.out.put_total[[1]][[1]][[2]][c(1,2),3],
                      final.out.put_total[[1]][[2]][c(1,2),3],final.out.put_total[[2]][c(1,2),3]),
                    
                    c( final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+4,3],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+4,3],final.out.put_total[[1]][[1]][[2]][c(4,4)+4,3],
                       final.out.put_total[[1]][[2]][c(4,4)+4,3],final.out.put_total[[2]][c(4,4)+4,3]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+4,3],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+4,3],final.out.put_total[[1]][[1]][[2]][c(1,2)+4,3],
                      final.out.put_total[[1]][[2]][c(1,2)+4,3],final.out.put_total[[2]][c(1,2)+4,3])
                    
                    
                    
                    
)
) 
,3)

table[c(1,3),c(1,3,5,7,9)]
table[c(1,3)+1,]

###phi#####
table=round(t(cbind(c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4),4],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4),4],final.out.put_total[[1]][[1]][[2]][c(4,4),4],
                      final.out.put_total[[1]][[2]][c(4,4),4],final.out.put_total[[2]][c(4,4),4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2),4],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2),4],final.out.put_total[[1]][[1]][[2]][c(1,2),4],
                      final.out.put_total[[1]][[2]][c(1,2),4],final.out.put_total[[2]][c(1,2),4]),
                    
                    c( final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+4,4],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+4,4],final.out.put_total[[1]][[1]][[2]][c(4,4)+4,4],
                       final.out.put_total[[1]][[2]][c(4,4)+4,4],final.out.put_total[[2]][c(4,4)+4,4]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+4,4],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+4,4],final.out.put_total[[1]][[1]][[2]][c(1,2)+4,4],
                      final.out.put_total[[1]][[2]][c(1,2)+4,4],final.out.put_total[[2]][c(1,2)+4,4])
                    
                    
                    
                    
)
) 
,3)

table[table<0]=0
table[c(1,3),c(1,3,5,7,9)]

table[c(1,3)+1,]


###phi_1#####
table=round(t(cbind(c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4),5],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4),5],final.out.put_total[[1]][[1]][[2]][c(4,4),5],
                      final.out.put_total[[1]][[2]][c(4,4),5],final.out.put_total[[2]][c(4,4),5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2),5],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2),5],final.out.put_total[[1]][[1]][[2]][c(1,2),5],
                      final.out.put_total[[1]][[2]][c(1,2),5],final.out.put_total[[2]][c(1,2),5]),
                    
                    c( final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+4,5],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+4,5],final.out.put_total[[1]][[1]][[2]][c(4,4)+4,5],
                       final.out.put_total[[1]][[2]][c(4,4)+4,5],final.out.put_total[[2]][c(4,4)+4,5]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+4,5],final.out.put_total[[1]][[1]][[1]][[2]][c(1,2)+4,5],final.out.put_total[[1]][[1]][[2]][c(1,2)+4,5],
                      final.out.put_total[[1]][[2]][c(1,2)+4,5],final.out.put_total[[2]][c(1,2)+4,5])
                    
                    
                    
                    
)
) 
,3)
table[c(1,3),c(1,3,5,7,9)]
table[c(1,3)+1,]
###MaxPro#####



table=round(1/t(cbind(c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4),6],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4),6],final.out.put_total[[1]][[1]][[2]][c(4,4),6],
                      final.out.put_total[[1]][[2]][c(4,4),6],final.out.put_total[[2]][c(4,4),6]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2),6],final.out.put_total[[1]][[1]][[1]][[2]][c(2,1),6],final.out.put_total[[1]][[1]][[2]][c(2,1),6],
                      final.out.put_total[[1]][[2]][c(2,1),6],final.out.put_total[[2]][c(2,1),6]),
                    
                    c( final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(4,4)+4,6],final.out.put_total[[1]][[1]][[1]][[2]][c(4,4)+4,6],final.out.put_total[[1]][[1]][[2]][c(4,4)+4,6],
                       final.out.put_total[[1]][[2]][c(4,4)+4,6],final.out.put_total[[2]][c(4,4)+4,6]),
                    
                    c(final.out.put_total[[1]][[1]][[1]][[1]][[2]][c(1,2)+4,6],final.out.put_total[[1]][[1]][[1]][[2]][c(2,1)+4,6],final.out.put_total[[1]][[1]][[2]][c(2,1)+4,6],
                      final.out.put_total[[1]][[2]][c(2,1)+4,6],final.out.put_total[[2]][c(2,1)+4,6])
                    
                    
                    
                    
)
) 
,3)
